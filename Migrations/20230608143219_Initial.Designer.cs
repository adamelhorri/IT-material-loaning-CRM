// <auto-generated />
using System;
using DistributionAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DistributionAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230608143219_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DistributionAPI.Admin", b =>
                {
                    b.Property<int>("id_admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_admin"));

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_admin");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("DistributionAPI.Article", b =>
                {
                    b.Property<int>("sn_article")
                        .HasColumnType("int");

                    b.Property<bool?>("available_article")
                        .HasColumnType("bit");

                    b.Property<string>("description_article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("po_purchase")
                        .HasColumnType("int");

                    b.Property<int>("price_article")
                        .HasColumnType("int");

                    b.Property<string>("type_article")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sn_article");

                    b.HasIndex("po_purchase");

                    b.ToTable("article", (string)null);
                });

            modelBuilder.Entity("DistributionAPI.Attribution", b =>
                {
                    b.Property<int>("id_attribution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_attribution"));

                    b.Property<string>("comment_attribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_attribution")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_user")
                        .HasColumnType("int");

                    b.Property<int?>("po_purchase")
                        .HasColumnType("int");

                    b.Property<int?>("sn_article")
                        .HasColumnType("int");

                    b.Property<string>("status_attribution")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_attribution");

                    b.HasIndex("id_user");

                    b.HasIndex("po_purchase");

                    b.HasIndex("sn_article");

                    b.ToTable("attribution", (string)null);
                });

            modelBuilder.Entity("DistributionAPI.Purchase", b =>
                {
                    b.Property<int>("po_purchase")
                        .HasColumnType("int");

                    b.Property<bool?>("available_purchase")
                        .HasColumnType("bit");

                    b.Property<DateTime>("date_delivery_purchase")
                        .HasColumnType("datetime2");

                    b.Property<string>("status_purchase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("po_purchase");

                    b.ToTable("purchase", (string)null);
                });

            modelBuilder.Entity("DistributionAPI.User", b =>
                {
                    b.Property<int>("id_user")
                        .HasColumnType("int");

                    b.Property<string>("departement_user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email_user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fname_user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location_user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title_user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_user");

                    b.ToTable("teuser", (string)null);
                });

            modelBuilder.Entity("DistributionAPI.Article", b =>
                {
                    b.HasOne("DistributionAPI.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("po_purchase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("DistributionAPI.Attribution", b =>
                {
                    b.HasOne("DistributionAPI.User", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistributionAPI.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("po_purchase");

                    b.HasOne("DistributionAPI.Article", "Article")
                        .WithMany()
                        .HasForeignKey("sn_article");

                    b.Navigation("Article");

                    b.Navigation("Purchase");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
